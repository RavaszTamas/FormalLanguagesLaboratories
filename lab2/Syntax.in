Syntactical rules:
	program = compoundstatment
	statementlist = statement ";" {statementlist}
	statement = declarationlist | simplestatement | structuredtatement
	declarationlist = type identifier{","identifier}";"	
	type = primarytypes | arraytype
	primarytypes = “egesz” | "dupla" | "karakter" | "boolean"
	arraytype = primarytipes "[" nr "]"
	compoundstatment = "Kezd" statementlist "Vege"
	simplestatement = assignment | iostatement
	assignment = identifier "kapja" expression 
	expression = expression ("osszead"|"kivon") term | term
	term = term ("szoroz"|"osztas") factor | factor
	factor = "(" expression ")" | identifier	
	operation = "osszead" | "kivon" | "oszt" | "szoroz" |  "modulo" 
	iostatement = ("olvas" | "kiir" )  identifier ";"
	structuredtatement = ifstatement | whilestatement | forstatement | switchstmt | casestatement
	ifstatement = "ha"  condition  statement ["kulonben" statement]
	condition = expression relation expression
	whilestatement = "amig" condition compoundstatment 
	forstatement = "ismeteld" "(" assignment; condition;  ")" statement
	switchstmt = "valassz" "(" condition ")" casestatement{casestatement} "default" ":" statementlist 
	casestatement = "eset" ":" statementlist "allj;"

b) lexical rules:
	identifier = letter {( letter | digit)}
     letter = "A" | "B" |...| "Z" | "a" | "b" | ... | "z"
      digit = "0" | "1" |...| "9"
   relation = "nemegyenlo" "egyenlo" "nagyobbvagyegyenlo" "kisebbvagyegyenlo" "kisebb" "nagyobb"
